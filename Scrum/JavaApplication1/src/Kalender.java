import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author joell
 */
public class Kalender extends javax.swing.JFrame {

    Connection con = null;  
    PreparedStatement pst = null;
    ResultSet res = null;
    private ResultSet rs;
    private PreparedStatement pstm;
    private String inloggadPerson;
    /**
     * Creates new form SeAnvändaresMöten
     */
    public Kalender(String anvandarnamn) {
        initComponents();
        inloggadPerson = anvandarnamn;
        fyllComboBox();
        
    }
    
      public void fyllComboBox() {
      cbPerson.removeAllItems();
      cbPerson.addItem("Välj användare");
    String sql = "Select `anamn` from `user`";
        try {
          con = DriverManager.getConnection("jdbc:mysql://mysqlse.fragnet.net:3306/111653_clientdb", "111653" ,"81374364");
          pstm = con.prepareStatement(sql);
          rs= pstm.executeQuery();
          while(rs.next()){
          cbPerson.addItem(rs.getString(1));
          }
        } catch (SQLException ex) {
            Logger.getLogger(Startsida.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSök = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMöte = new javax.swing.JTable();
        btnTillbaka = new javax.swing.JButton();
        cbPerson = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Se en användares möten");

        btnSök.setText("Visa alla möten");
        btnSök.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSökActionPerformed(evt);
            }
        });

        tblMöte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mötesnamn", "Datum"
            }
        ));
        jScrollPane2.setViewportView(tblMöte);

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        cbPerson.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbPerson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbPersonMouseClicked(evt);
            }
        });
        cbPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTillbaka)
                            .addComponent(btnSök, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(cbPerson, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(cbPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSök, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTillbaka))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSökActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSökActionPerformed
     try{ 
         String valtnamn = cbPerson.getSelectedItem().toString();
         if(!"Välj användare".equals(valtnamn)){
            String query1="SELECT titel, datum FROM `möte` JOIN user_möte ON möte.ID = user_möte.möte_fk JOIN user ON user_möte.user_fk = user.id WHERE user.anamn =? ";
            con = DriverManager.getConnection("jdbc:mysql://mysqlse.fragnet.net:3306/111653_clientdb", "111653" ,"81374364");
            pst=con.prepareStatement(query1);
            pst.setString(1, valtnamn);
            res =pst.executeQuery();  
            tblMöte.setModel(DbUtils.resultSetToTableModel(res));
            tblMöte.getTableHeader();
            tblMöte.getColumnModel().getColumn(0).setHeaderValue("Mötesnamn");
            tblMöte.getColumnModel().getColumn(1).setHeaderValue("Datum");
            tblMöte.getTableHeader().repaint();
         }
            else{             
                String query1="SELECT titel, datum FROM `möte`";
                con = DriverManager.getConnection("jdbc:mysql://mysqlse.fragnet.net:3306/111653_clientdb", "111653" ,"81374364");
                pst=con.prepareStatement(query1);
                res =pst.executeQuery();  
                tblMöte.setModel(DbUtils.resultSetToTableModel(res));
                tblMöte.getTableHeader();
                tblMöte.getColumnModel().getColumn(0).setHeaderValue("Mötesnamn");
                tblMöte.getColumnModel().getColumn(1).setHeaderValue("Datum");
                tblMöte.getTableHeader().repaint();
            }    
            
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Kan ej koppla till databasen");
        }   
        
    }//GEN-LAST:event_btnSökActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        try {
            String anvandarnamn = inloggadPerson;
            Startsida start = new Startsida(anvandarnamn);
            start.setVisible(true);
            Kalender.this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Kalender.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void cbPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPersonActionPerformed
     
    }//GEN-LAST:event_cbPersonActionPerformed

    private void cbPersonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbPersonMouseClicked
      btnSök.setText("Sök");
    }//GEN-LAST:event_cbPersonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kalender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kalender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kalender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kalender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String anvandarnamn = "";
                new Kalender(anvandarnamn).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSök;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JComboBox<String> cbPerson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblMöte;
    // End of variables declaration//GEN-END:variables
}
